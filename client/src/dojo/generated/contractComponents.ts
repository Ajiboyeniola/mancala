/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: typeof World) {
	return {
		Game: (() => {
			return defineComponent(
				world,
				{
					game_id: RecsType.Number,
					winner: RecsType.Number,
					player_one: RecsType.BigInt,
					player_two: RecsType.BigInt,
				},
				{
					metadata: {
						name: "Game",
						types: ["u32", "enum", "contractaddress", "contractaddress"],
						customTypes: ["PlayerSide"],
					},
				}
			);
		})(),
		GameTurn: (() => {
			return defineComponent(
				world,
				{ game_id: RecsType.Number, player_side: RecsType.Number },
				{
					metadata: {
						name: "GameTurn",
						types: ["u32", "enum"],
						customTypes: ["PlayerSide"],
					},
				}
			);
		})(),
		GameId: (() => {
			return defineComponent(
				world,
				{ id: RecsType.Number, game_id: RecsType.BigInt },
				{
					metadata: {
						name: "GameId",
						types: ["u32", "u128"],
						customTypes: [],
					},
				}
			);
		})(),
		MancalaGame: (() => {
			return defineComponent(
				world,
				{
					game_id: RecsType.BigInt,
					player_one: RecsType.BigInt,
					player_two: RecsType.BigInt,
					current_player: RecsType.BigInt,
					winner: RecsType.BigInt,
					is_finished: RecsType.Boolean,
				},
				{
					metadata: {
						name: "MancalaGame",
						types: [
							"u128",
							"contractaddress",
							"contractaddress",
							"contractaddress",
							"contractaddress",
							"bool",
						],
						customTypes: [],
					},
				}
			);
		})(),
		Moves: (() => {
			return defineComponent(
				world,
				{
					player: RecsType.BigInt,
					count: RecsType.Number,
					last_decision: RecsType.Number,
				},
				{
					metadata: {
						name: "Moves",
						types: ["contractaddress", "u8", "enum"],
						customTypes: ["Direction"],
					},
				}
			);
		})(),
		GamePlayer: (() => {
			return defineComponent(
				world,
				{
					address: RecsType.BigInt,
					game_id: RecsType.BigInt,
					pit1: RecsType.Number,
					pit2: RecsType.Number,
					pit3: RecsType.Number,
					pit4: RecsType.Number,
					pit5: RecsType.Number,
					pit6: RecsType.Number,
					mancala: RecsType.Number,
				},
				{
					metadata: {
						name: "GamePlayer",
						types: [
							"contractaddress",
							"u128",
							"u8",
							"u8",
							"u8",
							"u8",
							"u8",
							"u8",
							"u8",
						],
						customTypes: [],
					},
				}
			);
		})(),
		Player: (() => {
			return defineComponent(
				world,
				{
					address: RecsType.BigInt,
					games_won: RecsType.BigInt,
					games_lost: RecsType.BigInt,
				},
				{
					metadata: {
						name: "Player",
						types: ["contractaddress", "u256", "u256"],
						customTypes: [],
					},
				}
			);
		})(),
		Seed: (() => {
			return defineComponent(
				world,
				{
					game_id: RecsType.Number,
					position: { x: RecsType.Number, y: RecsType.Number },
					player_side: RecsType.Number,
				},
				{
					metadata: {
						name: "Seed",
						types: ["u32", "u32", "u32", "enum"],
						customTypes: ["Vec2", "PlayerSide"],
					},
				}
			);
		})(),
	};
}
